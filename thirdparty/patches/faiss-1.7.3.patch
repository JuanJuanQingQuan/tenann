diff --git a/faiss/CMakeLists.txt b/faiss/CMakeLists.txt
index fd3ddb3..73b5757 100644
--- a/faiss/CMakeLists.txt
+++ b/faiss/CMakeLists.txt
@@ -248,13 +248,9 @@ if(MKL_FOUND)
   target_link_libraries(faiss PRIVATE ${MKL_LIBRARIES})
   target_link_libraries(faiss_avx2 PRIVATE ${MKL_LIBRARIES})
 else()
-  find_package(BLAS REQUIRED)
-  target_link_libraries(faiss PRIVATE ${BLAS_LIBRARIES})
-  target_link_libraries(faiss_avx2 PRIVATE ${BLAS_LIBRARIES})
-
-  find_package(LAPACK REQUIRED)
-  target_link_libraries(faiss PRIVATE ${LAPACK_LIBRARIES})
-  target_link_libraries(faiss_avx2 PRIVATE ${LAPACK_LIBRARIES})
+  find_package(OpenBLAS REQUIRED PATHS ${CMAKE_INSTALL_DATAROOTDIR}/openblas)
+  target_link_libraries(faiss PRIVATE ${OpenBLAS_LIBRARIES})
+  target_link_libraries(faiss_avx2 PRIVATE ${OpenBLAS_LIBRARIES})
 endif()
 
 install(TARGETS faiss
diff --git a/faiss/impl/HNSW.cpp b/faiss/impl/HNSW.cpp
index 1ed15d7..3158639 100644
--- a/faiss/impl/HNSW.cpp
+++ b/faiss/impl/HNSW.cpp
@@ -693,6 +693,7 @@ HNSWStats HNSW::search(
             greedy_update_nearest(*this, qdis, level, nearest, d_nearest);
         }
 
+        int efSearch = params ? params->efSearch : this->efSearch;
         int ef = std::max(efSearch, k);
         if (search_bounded_queue) { // this is the most common branch
             MinimaxHeap candidates(ef);
@@ -837,8 +838,10 @@ void HNSW::MinimaxHeap::push(storage_idx_t i, float v) {
     if (k == n) {
         if (v >= dis[0])
             return;
+        if (ids[0] != -1) {
+            --nvalid;
+        }
         faiss::heap_pop<HC>(k--, dis.data(), ids.data());
-        --nvalid;
     }
     faiss::heap_push<HC>(++k, dis.data(), ids.data(), v, i);
     ++nvalid;
diff --git a/faiss/utils/distances.cpp b/faiss/utils/distances.cpp
index 037f86b..acc1ab1 100644
--- a/faiss/utils/distances.cpp
+++ b/faiss/utils/distances.cpp
@@ -79,7 +79,7 @@ void fvec_norms_L2sqr(
 }
 
 void fvec_renorm_L2(size_t d, size_t nx, float* __restrict x) {
-#pragma omp parallel for
+// #pragma omp parallel for
     for (int64_t i = 0; i < nx; i++) {
         float* __restrict xi = x + i * d;

diff --git a/faiss/IndexHNSW.cpp b/faiss/IndexHNSW.cpp
index 3e15940..55254eb 100644
--- a/faiss/IndexHNSW.cpp
+++ b/faiss/IndexHNSW.cpp
@@ -308,14 +308,14 @@ void IndexHNSW::search(
     for (idx_t i0 = 0; i0 < n; i0 += check_period) {
         idx_t i1 = std::min(i0 + check_period, n);

-#pragma omp parallel
+// #pragma omp parallel
         {
             VisitedTable vt(ntotal);

             DistanceComputer* dis = storage_distance_computer(storage);
             ScopeDeleter1<DistanceComputer> del(dis);

-#pragma omp for reduction(+ : n1, n2, n3, ndis, nreorder)
+// #pragma omp for reduction(+ : n1, n2, n3, ndis, nreorder)
             for (idx_t i = i0; i < i1; i++) {
                 idx_t* idxi = labels + i * k;
                 float* simi = distances + i * k;
